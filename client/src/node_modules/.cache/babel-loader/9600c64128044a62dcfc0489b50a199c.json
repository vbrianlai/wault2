{"ast":null,"code":"var _jsxFileName = \"/Users/brianlai/Desktop/web-dev-projects/wault/src/App.js\";\nimport React, { Component } from \"react\";\nimport * as $ from \"jquery\";\nimport Player from \"./components/Player\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nexport const authEndpoint = 'https://accounts.spotify.com/authorize'; // Replace with your app's client ID, redirect URI and desired scopes\n\nconst clientId = \"fffcd84a50ae45b0abdd09e054d17868\";\nconst redirectUri = \"http://localhost:3000\";\nconst scopes = [\"user-read-currently-playing\", \"user-read-playback-state\"]; // Get the hash of the url\n\nconst hash = window.location.hash.substring(1).split(\"&\").reduce(function (initial, item) {\n  if (item) {\n    var parts = item.split(\"=\");\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n  }\n\n  return initial;\n}, {});\nwindow.location.hash = \"\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      item: {\n        album: {\n          images: [{\n            url: \"\"\n          }]\n        },\n        name: \"\",\n        artists: [{\n          name: \"\"\n        }],\n        duration_ms: 0\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0\n    };\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n  }\n\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }), !this.state.token && /*#__PURE__*/React.createElement(\"a\", {\n      className: \"btn btn--loginApp-link\",\n      href: `${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"Login to Spotify\"), this.state.token && /*#__PURE__*/React.createElement(Player, {\n      item: this.state.item,\n      is_playing: this.state.is_playing,\n      progress_ms: this.progress_ms,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/brianlai/Desktop/web-dev-projects/wault/src/App.js"],"names":["React","Component","$","Player","authEndpoint","clientId","redirectUri","scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","App","constructor","state","token","album","images","url","name","artists","duration_ms","is_playing","progress_ms","getCurrentlyPlaying","bind","ajax","type","beforeSend","xhr","setRequestHeader","success","data","setState","componentDidMount","_token","access_token","render","logo","join"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as $ from \"jquery\";\nimport Player from \"./components/Player\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\n// Replace with your app's client ID, redirect URI and desired scopes\nconst clientId = \"fffcd84a50ae45b0abdd09e054d17868\";\nconst redirectUri = \"http://localhost:3000\";\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-playback-state\",\n];\n// Get the hash of the url\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n    item: {\n      album: {\n        images: [{ url: \"\" }]\n      },\n      name: \"\",\n      artists: [{ name: \"\" }],\n      duration_ms:0,\n    },\n    is_playing: \"Paused\",\n    progress_ms: 0\n  };\n  this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n  }\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: (xhr) => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: (data) => {\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms,\n        });\n      }\n    });\n  }\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n    }\n  }\nrender() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      {!this.state.token && (\n        <a\n          className=\"btn btn--loginApp-link\"\n          href={`${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`}\n        >\n          Login to Spotify\n        </a>\n      )}\n      {this.state.token && (\n        <Player\n          item={this.state.item}\n          is_playing={this.state.is_playing}\n          progress_ms={this.progress_ms}\n        />\n      )}\n      </header>\n    </div>\n  );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}