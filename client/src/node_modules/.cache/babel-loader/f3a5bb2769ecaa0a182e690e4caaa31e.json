{"ast":null,"code":"var _jsxFileName = \"/Users/brianlai/Desktop/web-dev-projects/wault/src/App.js\";\nimport React, { Component } from \"react\";\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { withStyles } from '@material-ui/core/styles/withStyles';\nimport './App.css';\nimport { Button } from \"@material-ui/core\";\nconst spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n\n    this.state = {\n      loggedIn: token ? true : false,\n      user: {},\n      nowPlaying: {\n        name: 'Not Checked',\n        albumArt: ''\n      }\n    };\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n\n    return hashParams;\n  }\n\n  getMe() {\n    spotifyApi.getMe().then(response => {\n      this.setState({\n        user: response\n      });\n      console.log(response);\n    });\n  }\n\n  getNowPlaying() {\n    spotifyApi.getMyCurrentPlaybackState().then(response => {\n      if (response) {\n        this.setState({\n          nowPlaying: {\n            name: response.item.name,\n            albumArt: response.item.album.images[0].url\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \" Login to Spotify \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"User: \", this.state.user.display_name, \"Now Playing: \", this.state.nowPlaying.name), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.nowPlaying.albumArt,\n      style: {\n        height: 150\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    })), this.state.loggedIn && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.getNowPlaying(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"Check Now Playing\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => this.getMe(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, \"Get me\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/brianlai/Desktop/web-dev-projects/wault/src/App.js"],"names":["React","Component","SpotifyWebApi","withStyles","Button","spotifyApi","App","constructor","params","getHashParams","token","access_token","setAccessToken","state","loggedIn","user","nowPlaying","name","albumArt","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getMe","then","response","setState","console","log","getNowPlaying","getMyCurrentPlaybackState","item","album","images","url","render","display_name","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport {withStyles} from '@material-ui/core/styles/withStyles';\n\nimport './App.css'\nimport { Button } from \"@material-ui/core\";\n\nconst spotifyApi = new SpotifyWebApi();\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n    this.state = {\n      loggedIn: token ? true : false,\n      user: {}, \n      nowPlaying: { name: 'Not Checked', albumArt: '' }\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n  getMe() {\n    spotifyApi.getMe()\n      .then((response) => {\n        this.setState({\n          user: response\n        })\n        console.log(response);\n      })\n  }\n\n  getNowPlaying(){\n    spotifyApi.getMyCurrentPlaybackState()\n      .then((response) => {\n        if (response) {\n          this.setState({\n            nowPlaying: { \n                name: response.item.name, \n                albumArt: response.item.album.images[0].url\n              }\n          });\n        }\n        \n      })\n  }\n\n\n  render() {\n    \n    return (\n        <div className=\"App\">\n            <a href='http://localhost:8888' > Login to Spotify </a>\n            <div>\n                User: {this.state.user.display_name}\n                Now Playing: { this.state.nowPlaying.name }\n            </div>\n            <div>\n              <img src={this.state.nowPlaying.albumArt} style={{ height: 150 }}/>\n            </div>\n            { this.state.loggedIn &&\n              <div>\n                <button onClick={() => this.getNowPlaying()}>\n                  Check Now Playing\n                </button>\n                <Button variant='contained' color='primary' onClick={() => this.getMe()}>Get me</Button>\n              </div>\n              \n            }\n        </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}