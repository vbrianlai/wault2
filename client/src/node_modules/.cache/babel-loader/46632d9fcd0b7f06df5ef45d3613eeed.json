{"ast":null,"code":"var _jsxFileName = \"/Users/brianlai/Desktop/web-dev-projects/wault/src/components/SearchBar.js\";\nimport React, { Component } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport TrackList from './TrackList'; // import {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\n\nimport TextField from '@material-ui/core/TextField';\nconst spotifyWebApi = new Spotify();\nexport default class SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchParams: '',\n      searchResults: [],\n      showResults: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    if (e.target.value.length > 0) {\n      this.spotifySearch(e.target.value);\n    }\n\n    this.setState({\n      searchParams: e.target.value\n    });\n  }\n\n  spotifySearch(str) {\n    spotifyWebApi.searchTracks(str, {\n      limit: 5\n    }).then(data => {\n      let results = [];\n      data.tracks.items.forEach(item => {\n        results.push(item);\n      });\n      this.setState({\n        searchResults: results\n      });\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-search\",\n      label: \"Search for songs on Spotify\",\n      type: \"search\",\n      onChange: this.handleChange,\n      value: this.state.searchParams,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }), this.state.searchParams.length > 0 && /*#__PURE__*/React.createElement(TrackList, {\n      results: this.state.searchResults,\n      updateLikes: this.props.updateLikes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/brianlai/Desktop/web-dev-projects/wault/src/components/SearchBar.js"],"names":["React","Component","Spotify","TrackList","TextField","spotifyWebApi","SearchBar","constructor","props","state","searchParams","searchResults","showResults","handleChange","bind","e","target","value","length","spotifySearch","setState","str","searchTracks","limit","then","data","results","tracks","items","forEach","item","push","err","console","log","render","updateLikes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,MAAMC,aAAa,GAAG,IAAIH,OAAJ,EAAtB;AAEA,eAAe,MAAMI,SAAN,SAAwBL,SAAxB,CAAkC;AAC7CM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,EADL;AAETC,MAAAA,aAAa,EAAE,EAFN;AAGTC,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACE,CAAD,EAAI;AACZ,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwB,CAA5B,EAA+B;AAC3B,WAAKC,aAAL,CAAmBJ,CAAC,CAACC,MAAF,CAASC,KAA5B;AACH;;AACD,SAAKG,QAAL,CAAc;AAACV,MAAAA,YAAY,EAAEK,CAAC,CAACC,MAAF,CAASC;AAAxB,KAAd;AACH;;AAEDE,EAAAA,aAAa,CAACE,GAAD,EAAM;AACfhB,IAAAA,aAAa,CAACiB,YAAd,CAA2BD,GAA3B,EAAgC;AAACE,MAAAA,KAAK,EAAE;AAAR,KAAhC,EACGC,IADH,CACSC,IAAD,IAAU;AACd,UAAIC,OAAO,GAAG,EAAd;AACAD,MAAAA,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkBC,OAAlB,CAA0BC,IAAI,IAAI;AAC9BJ,QAAAA,OAAO,CAACK,IAAR,CAAaD,IAAb;AACH,OAFD;AAGA,WAAKV,QAAL,CAAc;AAACT,QAAAA,aAAa,EAAEe;AAAhB,OAAd;AACD,KAPH,EAOMM,GAAD,IAAS;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KATH;AAUH;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,EAAE,EAAC,iBADP;AAEI,MAAA,KAAK,EAAC,6BAFV;AAGI,MAAA,IAAI,EAAC,QAHT;AAGkB,MAAA,QAAQ,EAAE,KAAKtB,YAHjC;AAII,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,YAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOK,KAAKD,KAAL,CAAWC,YAAX,CAAwBQ,MAAxB,GAAiC,CAAjC,iBACG,oBAAC,SAAD;AACI,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWE,aADxB;AAEI,MAAA,WAAW,EAAE,KAAKH,KAAL,CAAW4B,WAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARR,CADJ;AAeH;;AA/C4C","sourcesContent":["import React, { Component } from 'react'\nimport Spotify from 'spotify-web-api-js';\nimport TrackList from './TrackList';\n// import {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\nimport TextField from '@material-ui/core/TextField';\n\nconst spotifyWebApi = new Spotify();\n\nexport default class SearchBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchParams: '',\n            searchResults: [],\n            showResults: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        if (e.target.value.length > 0) {\n            this.spotifySearch(e.target.value);\n        }\n        this.setState({searchParams: e.target.value});\n    }\n\n    spotifySearch(str) {\n        spotifyWebApi.searchTracks(str, {limit: 5})\n          .then((data) => {\n            let results = [];\n            data.tracks.items.forEach(item => {\n                results.push(item);\n            });\n            this.setState({searchResults: results});\n          }, (err) => {\n            console.log(err);\n          })\n    }\n\n    render() {\n        return (\n            <div >\n                <TextField \n                    id=\"standard-search\" \n                    label=\"Search for songs on Spotify\" \n                    type=\"search\" onChange={this.handleChange} \n                    value={this.state.searchParams}\n                />\n                {this.state.searchParams.length > 0 && \n                    <TrackList \n                        results={this.state.searchResults} \n                        updateLikes={this.props.updateLikes}\n                     />}\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}