{"ast":null,"code":"var _jsxFileName = \"/Users/brianlai/Desktop/web-dev-projects/wault/client/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { withStyles, ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { green, purple, blue } from '@material-ui/core/colors';\nimport clsx from 'clsx';\nimport { Button, Avatar, Drawer, Divider } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport Home from './Home';\nimport background from \"../media/Endless-Constellation.svg\";\nconst drawerWidth = '400px';\n\nconst styles = theme => ({\n  root: {\n    backgroundImage: `url(${background})`,\n    height: '100%'\n  },\n  title: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: 'white'\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginRight: -drawerWidth,\n    display: 'flex',\n    justifyContent: 'flex-start'\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginRight: drawerWidth\n  }\n});\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roomNameInput: '',\n      rooms: []\n    };\n    this.createRoom = this.createRoom.bind(this);\n    this.getRooms = this.getRooms.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    if (this.props.user !== nextProps.user) {\n      await axios.get('/api/get/myRooms', {\n        params: {\n          rownerid: parseInt(nextProps.user.id)\n        }\n      }).then(res => {\n        this.setState({\n          rooms: res.data\n        });\n      }).catch(err => console.log(err));\n    }\n  }\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule('isRoomUnique', value => //for every color saved, check if its name is equal to the text value\n    this.state.rooms.every(({\n      rname\n    }) => {\n      return rname.toLowerCase() !== value.toLowerCase();\n    }));\n  }\n\n  createRoom() {\n    const data = {\n      rname: this.state.roomNameInput,\n      rownerid: parseInt(this.props.user.id)\n    };\n    console.log(data);\n    axios.post('/api/post/newRoom', data).then(res => {\n      console.log(res);\n      this.getRooms();\n    }).catch(err => console.log(err));\n  }\n\n  getRooms() {\n    axios.get('/api/get/myRooms', {\n      params: {\n        rownerid: parseInt(this.props.user.id)\n      }\n    }).then(res => {\n      this.setState({\n        rooms: res.data\n      });\n    }).catch(err => console.log(err));\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    const {\n      classes,\n      open,\n      user\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Drawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"right\",\n      open: open,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.drawerHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, \"You are signed in as \", user.display_name, \". \"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      href: \"http://localhost:8888/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, \"Sign Out\")), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ValidatorForm, {\n      onSubmit: this.createRoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      placeholder: \"Enter Room Name\",\n      name: \"roomNameInput\",\n      value: this.state.roomNameInput,\n      onChange: this.handleChange,\n      validators: ['required', 'isRoomUnique'],\n      errorMessages: ['This field is required', 'Room name is already taken'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, \"Create Room\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, this.state.rooms.map(room => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 37\n      }\n    }, room.rname)))), /*#__PURE__*/React.createElement(\"main\", {\n      className: clsx(classes.content, {\n        [classes.contentShift]: open\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Home, {\n      user: this.props.user,\n      playbackState: this.props.playbackState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }\n    }))));\n  }\n\n}\n\nexport default withStyles(styles)(Dashboard);","map":{"version":3,"sources":["/Users/brianlai/Desktop/web-dev-projects/wault/client/src/components/Dashboard.js"],"names":["React","Component","SpotifyWebApi","ValidatorForm","TextValidator","withStyles","ThemeProvider","createMuiTheme","green","purple","blue","clsx","Button","Avatar","Drawer","Divider","axios","Home","drawerWidth","styles","theme","root","backgroundImage","background","height","title","flexGrow","hide","display","drawer","width","flexShrink","drawerPaper","backgroundColor","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","content","transition","transitions","create","easing","sharp","duration","leavingScreen","marginRight","contentShift","easeOut","enteringScreen","Dashboard","constructor","props","state","roomNameInput","rooms","createRoom","bind","getRooms","handleChange","componentWillReceiveProps","nextProps","user","get","params","rownerid","parseInt","id","then","res","setState","data","catch","err","console","log","componentDidMount","addValidationRule","value","every","rname","toLowerCase","post","e","target","name","render","classes","open","paper","display_name","map","room","playbackState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\nimport {withStyles, ThemeProvider, createMuiTheme} from '@material-ui/core/styles';\nimport { green, purple, blue } from '@material-ui/core/colors';\nimport clsx from 'clsx';\nimport { Button, Avatar, Drawer, Divider } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport Home from './Home'\nimport background from '../media/Endless-Constellation.svg';\n\nconst drawerWidth = '400px'\nconst styles = (theme) => ({\n\troot: {\n\t\tbackgroundImage: `url(${background})`,\n\t\theight: '100%'\n\t},\n      title: {\n        flexGrow: 1,\n      },\n      hide: {\n        display: 'none',\n      },\n      drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n      drawerPaper: {\n        width: drawerWidth,\n        backgroundColor: 'white'\n      },\n      drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-start',\n      },\n      content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: -drawerWidth,\n        display: 'flex',\n        justifyContent: 'flex-start'\n      },\n      contentShift: {\n        transition: theme.transitions.create('margin', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth,\n      },\n});\n\nclass Dashboard extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\troomNameInput: '',\n\t\t\trooms: []\n\t\t}\n\t\tthis.createRoom = this.createRoom.bind(this);\n\t\tthis.getRooms = this.getRooms.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\tasync componentWillReceiveProps(nextProps) {\n        if (this.props.user !== nextProps.user) {\n\t\t\tawait axios.get('/api/get/myRooms', {params: {rownerid: parseInt(nextProps.user.id)}})\n\t\t\t\t.then(res => {\n\t\t\t\t\tthis.setState({rooms: res.data})\n\t\t\t\t})\n\t\t\t\t.catch(err => console.log(err))\n        }\n    }\n\n\tcomponentDidMount() {\n\t\tValidatorForm.addValidationRule('isRoomUnique', (value) => \n            //for every color saved, check if its name is equal to the text value\n            this.state.rooms.every(\n                ({rname}) => {\n\t\t\t\t\treturn rname.toLowerCase() !== value.toLowerCase()\n\t\t\t\t}\n            )\n        );\n\t}\n\n\tcreateRoom() {\n\t\tconst data = {\n\t\t\trname: this.state.roomNameInput,\n\t\t\trownerid: parseInt(this.props.user.id)\n\t\t}\n\t\tconsole.log(data)\n\t\taxios.post('/api/post/newRoom', data)\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res)\n\t\t\t\tthis.getRooms();\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\tgetRooms() {\n\t\taxios.get('/api/get/myRooms', {params: {rownerid: parseInt(this.props.user.id)}})\n\t\t\t.then(res => {\n\t\t\t\tthis.setState({rooms: res.data});\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\thandleChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    render() {\n        const {classes, open, user} = this.props;\n        return (\n            <div className={classes.root}>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"persistent\"\n                    anchor=\"right\"\n                    open={open}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    <div className={classes.drawerHeader}>\n                        <div>You are signed in as {user.display_name}. </div>\n                        <Button variant='contained' href='http://localhost:8888/login'>Sign Out</Button>\n                    </div>\n\n                    <Divider />\n\n\t\t\t\t\t<ValidatorForm onSubmit={this.createRoom}>\n\t\t\t\t\t\t<TextValidator\n\t\t\t\t\t\t\tplaceholder='Enter Room Name'\n\t\t\t\t\t\t\tname='roomNameInput'\n\t\t\t\t\t\t\tvalue={this.state.roomNameInput}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\tvalidators={['required', 'isRoomUnique']}\n                        \terrorMessages={['This field is required', 'Room name is already taken']}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='contained' \n                        \tcolor='primary'\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCreate Room\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</ValidatorForm>\n\n                    <div>\n\t\t\t\t\t\t{this.state.rooms.map(room => <div>{room.rname}</div>)}\n                    </div>\n                </Drawer>\n                <main className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}>\n                    <div>\n                        {/* stuff outside drawer */}\n\t\t\t\t\t\t<Home user={this.props.user} playbackState={this.props.playbackState}/>\n\n                    </div>\n                </main>\n                        \n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(Dashboard);"]},"metadata":{},"sourceType":"module"}